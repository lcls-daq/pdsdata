
// *** Do not edit this file, it is auto-generated ***

#include "pdsdata/psddl/partition.ddl.h"

#include <iostream>
namespace Pds {
namespace Partition {
Segment::Segment(const Pds::Src& arg__src, uint32_t arg__group)
    : _src(arg__src), _group(arg__group)
{
}
ConfigV1::ConfigV1(uint64_t arg__bldMask, uint32_t arg__numSegments, const Partition::Segment* arg__segments)
    : _bldMask(arg__bldMask), _numSegments(arg__numSegments)
{
  if (arg__segments and (this->numSegments())) {
    ptrdiff_t offset = 12;
    Partition::Segment* data = reinterpret_cast<Partition::Segment*>(((char*)this)+offset);
    std::copy(arg__segments, arg__segments+(this->numSegments()), data);
  }
}
} // namespace Partition
} // namespace Pds
